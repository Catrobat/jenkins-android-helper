#!/usr/bin/env sh

# This file is part of Jenkins-Android-Emulator Helper.
#    Copyright (C) 2018  Michael Musenbrock
#
# Jenkins-Android-Helper is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Jenkins-Android-Helper is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Jenkins-Android-Helper.  If not, see <http://www.gnu.org/licenses/>.

set -e

if [ -n "${ANDROID_EMULATOR_HELPER_DEBUG}" ]; then
	set -x
fi

## ANDROID_SDK_ROOT needs to be set to the Android SDK

_OPWD=`pwd`
SCRIPT_DIR=$(cd `dirname $0`; pwd)

LIBRARY_DIR=/usr/lib/jenkins-android-helper

### assume that the script runs locally
if [ -z "${WORKSPACE}" ]; then
	echo "It seems that the script runs outside Jenkins. WORKSPACE will be set to PWD [${_OPWD}]!"
	WORKSPACE="${_OPWD}"
fi

###### source helper scripts ####
source_library() {
	if [ -e "${LIBRARY_DIR}/${1}" ]; then
		. "${LIBRARY_DIR}/${1}"
	elif [ -e "${SCRIPT_DIR}/${1}" ]; then
		. "${SCRIPT_DIR}/${1}"
	else
		echo "Library ${1} could not be found, abort"
		exit 1
	fi
}

source_library ini_helper_functions.sh
source_library android_emulator_helper_functions.sh


usage() {
	cat <<EOOPTS
`basename $0` "$@"

This is a simple wrapper for any command calls, with two specialities.
First the command will have the proper ANDROID_SERIAL set and secondly,
if the call fails, it tries to execute the kill command for the current running
emulator.
EOOPTS
	exit 1
}

kill_emulator_on_failure() {
	RET_VAL=$?
	if [ ${RET_VAL} -ne 0 ]; then
		android_emulator_kill_emulator
	fi
	exit ${RET_VAL}
}

trap kill_emulator_on_failure EXIT

read_unique_avd_name_from_store
android_emulator_serial_via_port_from_used_avd_name
ANDROID_SERIAL=${ANDROID_EMULATOR_SERIAL} "$@"
